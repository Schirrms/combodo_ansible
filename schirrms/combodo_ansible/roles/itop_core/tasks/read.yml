# task read.yml, part of role itop_core
# Based on former role itop_core_read, this task does the 'read'
# Schirrms 2024-08-27
#
# @copyright   Copyright (C) 2023 Combodo SARL
# @license     http://opensource.org/licenses/AGPL-3.0
#
# This playbook reads a CI in iTop (based on the itop_key reconciliation values) and if the CI
# exists return the fields as defined in itop_fields
#
# Common role input parameters:
#  mandatory:
#  - itop_core_root                 = Root URL of the iTop application
#  either:
#  - itop_core_ws_auth_user         = User login
#  - itop_core_ws_auth_pwd          = User password
#  or:
#  - itop_core_ws_auth_token        = User token (token takes precedence over user/password)
#  optional:
#  - itop_core_ws_version           = Web Service version (default 1.3)
#  - itop_core_ws_ansible_uuid      = UUID in iTop of the Ansible application to work with (default ANS_APP1)
#  - itop_core_ws_ansible_inventory = Name of the inventory to consider (no use for a read, default ANS_ITOP)

# Task specific input parameters:
#  mandatory:
#  - itop_core_read_obj_class       = Class of CI to be read
#  - itop_core_read_key             = Set of attributes to be used for the reconciliation
#  - itop_core_read_fields          = Set of attributes to be sent back

# Please, refer to iTop's wiki about REST/JSON services for more details on these parameters.
#
# Output parameters:
#  - itop_core_read_code            = Return code sent by iTop's API
#  - itop_core_read_message         = Error message sent by iTop's API
#  - itop_core_read_obj_key         = Keys (ids) of the queried CI
#  - itop_core_read_output_values   = all values of the selected fields
#
---

- name: Check authentication variables
  ansible.builtin.fail:
    msg: "Either both itop_core_ws_auth_user and itop_core_ws_auth_pwd must be set and non-empty, \
          or itop_core_ws_auth_token must be set and contain at least 60 characters."
  when: not
    ((itop_core_ws_auth_user is defined and itop_core_ws_auth_user | length > 0 and
      itop_core_ws_auth_pwd is defined and itop_core_ws_auth_pwd | length > 0) or
     (itop_core_ws_auth_token is defined and itop_core_ws_auth_token | length >= 60))

- name: Build control list
  ansible.builtin.set_fact:
    __itop_core_read_fields_list: "{{ itop_core_read_fields.keys() | join(', ') }}"

- name: Set authentication method
  ansible.builtin.set_fact:
    __auth_method: "{{ 'token' if itop_core_ws_auth_token is defined and itop_core_ws_auth_token | length >= 60 else 'basic' }}"

- name: Check if CI exists (Basic Auth)
  ansible.builtin.uri:
    url: "{{ __itop_core_api_url }}"
    method: POST
    force_basic_auth: true
    url_username: "{{ itop_core_ws_auth_user }}"
    url_password: "{{ itop_core_ws_auth_pwd }}"
    body: "json_data={ \
      \"operation\":\"core/get\", \
      \"class\":\"{{ itop_core_read_obj_class }}\", \
      \"key\":{{ itop_core_read_key | to_json }}, \
      \"output_fields\":\"{{ __itop_core_read_fields_list }}\" \
      }"
    return_content: true
  register: __itop_core_read_response_basic
  when: __auth_method == 'basic'

- name: Check if CI exists (Token Auth)
  ansible.builtin.uri:
    url: "{{ __itop_core_api_url }}"
    method: POST
    body: "auth_token={{ itop_core_ws_auth_token }}&json_data={ \
      \"operation\":\"core/get\", \
      \"class\":\"{{ itop_core_read_obj_class }}\", \
      \"key\":{{ itop_core_read_key | to_json }}, \
      \"output_fields\":\"{{ __itop_core_read_fields_list }}\" \
      }"
    return_content: true
  register: __itop_core_read_response_token
  when: __auth_method == 'token'

- name: Save the Json data
  ansible.builtin.set_fact:
    __itop_core_read_jsondata: "{{ __itop_core_read_response_basic.content | from_json if __auth_method == 'basic' \
                                   else __itop_core_read_response_token.content | from_json }}"

- name: Get error code and message
  ansible.builtin.set_fact:
    itop_core_read_code: "{{ __itop_core_read_jsondata | json_query('code') }}"
    itop_core_read_message: "{{ __itop_core_read_jsondata | json_query('message') }}"

- name: Display error, if any
  ansible.builtin.fail:
    msg: "{{ itop_core_read_message }}"
  when: itop_core_read_code != "0"

- name: Get itop_obj_key
  ansible.builtin.set_fact:
    itop_core_read_obj_key: "{{ __itop_core_read_jsondata | json_query(param) }}"
  vars:
    param: 'objects.*.key'

- name: Get fields
  ansible.builtin.set_fact:
    itop_core_read_output_values: "{{ __itop_core_read_jsondata | json_query(param) }}"
  vars:
    param: 'objects.*.fields'

- name: Set the output to an empty list in case of an empty answer
  ansible.builtin.set_fact:
    itop_core_read_output_values: []
  when: >
      itop_core_read_output_values is not defined or
      itop_core_read_output_values is string or
      itop_core_read_output_values is mapping or
      itop_core_read_output_values is not iterable
