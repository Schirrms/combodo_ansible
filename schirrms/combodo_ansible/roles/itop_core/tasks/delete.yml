# delete.yml task, part of role itop_core
# Just a conversion of itop_core_delete role into a delete task member of itop_core role
# Schirrms 2024-08-28
#

# @copyright   Copyright (C) 2023 Combodo SARL
# @license     http://opensource.org/licenses/AGPL-3.0
#
# This playbook check if a iTop CI is unique (based on the itop_key reconciliation values)
# and if this is true, try to delete it
#
# Common role input parameters:
#  mandatory:
#  - itop_core_root                 = Root URL of the iTop application
#  either:
#  - itop_core_ws_auth_user         = User login
#  - itop_core_ws_auth_pwd          = User password
#  or:
#  - itop_core_ws_auth_token        = User token (token takes precedence over user/password)
#  optional:
#  - itop_core_ws_version           = Web Service version (default 1.3)
#  - itop_core_ws_ansible_uuid      = UUID in iTop of the Ansible application to work with (default ANS_APP1)
#  - itop_core_ws_ansible_inventory = Name of the inventory to consider (no use for a read, default ANS_ITOP)

#  Task specific input parameters:
#  mandatory:
#  - itop_core_delete_obj_class     = Class of CI to be written
#  - itop_core_delete_key           = Set of attributes to be used for the reconciliation
#                                     or id of the record to delete
#  optional:
#  - itop_core_delete_simulate      =  "true" or "false" with the quotes! (a string, not a boolean)
#                                      * "true" : no deletion (default value)
#                                      * "false": DELETION!
#  - itop_core_delete_comment       = A comment set in iTop while deleting an object

# Please, refer to iTop's wiki about REST/JSON services for more details on these parameters.
#
# Output parameters:
#  - itop_core_delete_code     = Error code sent by iTop's API
#  - itop_core_delete_message  = Error message sent by iTop's API
#  - itop_core_delete_obj_key  = Key of the deleted CI
#
---

- name: Check authentication variables
  ansible.builtin.fail:
    msg: "Either both itop_core_ws_auth_user and itop_core_ws_auth_pwd must be set and non-empty, \
          or itop_core_ws_auth_token must be set and contain at least 60 characters."
  when: not
    ((itop_core_ws_auth_user is defined and itop_core_ws_auth_user | length > 0 and
      itop_core_ws_auth_pwd is defined and itop_core_ws_auth_pwd | length > 0) or
     (itop_core_ws_auth_token is defined and itop_core_ws_auth_token | length >= 60))

- name: Check the uniqueness of the CI to remove
  ansible.builtin.include_tasks:
    file: ispresent.yml
  vars:
    itop_core_ispresent_key: "{{ itop_core_delete_key }}"
    itop_core_ispresent_obj_class: "{{ itop_core_delete_obj_class }}"

- name: Abort if uniqueness is not OK
  ansible.builtin.fail:
    msg: "Unable to start CI deletion, uniqueness result is {{ itop_core_ispresent_found_items }}, should be 0 or 1"
  when: ( itop_core_ispresent_found_items | int ) > 1

- name: Delete the CI
  when: ( itop_core_ispresent_found_items | int ) == 1
  block:
    - name: Set authentication method
      ansible.builtin.set_fact:
        __auth_method: "{{ 'token' if itop_core_ws_auth_token is defined and itop_core_ws_auth_token | length >= 60 else 'basic' }}"

    - name: Call iTop API for actual deletion (Basic Auth)
      ansible.builtin.uri:
        url: "{{ __itop_core_api_url }}"
        method: POST
        force_basic_auth: true
        url_username: "{{ itop_core_ws_auth_user }}"
        url_password: "{{ itop_core_ws_auth_pwd }}"
        body: "json_data= { \
          \"operation\":\"core/delete\", \
          \"comment\":\"{{ itop_core_delete_comment }}\", \
          \"class\":\"{{ itop_core_delete_obj_class }}\", \
          \"key\":{{ itop_core_delete_key | to_json }}, \
          \"simulate\":{{ itop_core_delete_simulate }} \
          }"
        return_content: true
      register: __itop_core_delete_response_basic
      when: __auth_method == 'basic'

    - name: Call iTop API for actual deletion (Token Auth)
      ansible.builtin.uri:
        url: "{{ __itop_core_api_url }}"
        method: POST
        body: "auth_token={{ itop_core_ws_auth_token }}&json_data= { \
          \"operation\":\"core/delete\", \
          \"comment\":\"{{ itop_core_delete_comment }}\", \
          \"class\":\"{{ itop_core_delete_obj_class }}\", \
          \"key\":{{ itop_core_delete_key | to_json }}, \
          \"simulate\":{{ itop_core_delete_simulate }} \
          }"
        return_content: true
      register: __itop_core_delete_response_token
      when: __auth_method == 'token'

    - name: Save the Json data
      ansible.builtin.set_fact:
        __itop_core_delete_jsondata: "{{ __itop_core_delete_response_basic.content | from_json if __auth_method == 'basic' \
                                       else __itop_core_delete_response_token.content | from_json }}"

    - name: Get error code and message
      ansible.builtin.set_fact:
        itop_core_delete_code: "{{ __itop_core_delete_jsondata | json_query('code') }}"
        itop_core_delete_message: "{{ __itop_core_delete_jsondata | json_query('message') }}"
        __itop_core_delete_change: "{{ __itop_core_delete_jsondata | json_query('message') | \
                                       regex_search('^(?:SIMULATING:\\s*)?Deleted:\\s*(\\d+)', '\\1') | first }}"
      changed_when: __itop_core_delete_change | int > 0

    - name: Display error, if any
      ansible.builtin.fail:
        msg: "{{ itop_core_delete_message }}"
      when: itop_core_delete_code != "0"
